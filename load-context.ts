import { type AppLoadContext } from '@remix-run/cloudflare';
// In the future, types for bindings will be generated by `wrangler types`
// See https://github.com/cloudflare/workers-sdk/pull/4931

type Bindings = {
  // Add types for bindings configured in `wrangler.toml`
  CF_BEACON_TOKEN: string | null | undefined;
  ENV: 'development' | 'preview' | 'production';
};

type Context = {
  request: Request;
  env: Bindings;
  cf: IncomingRequestCfProperties;
};

declare module '@remix-run/cloudflare' {
  interface AppLoadContext {
    env: Bindings;
    cf: IncomingRequestCfProperties;
  }
}

// Shared implementation compatible with Vite, Wrangler, and Cloudflare Pages
export const getLoadContext = async (
  context: Context,
): Promise<AppLoadContext> => {
  return {
    ...context,
    // Only add if we don't have it already, this will only happen in development
    ...(!context.cf
      ? {
          cf: (context.request as unknown as any)
            .cf as IncomingRequestCfProperties,
        }
      : {}),
  };
};
